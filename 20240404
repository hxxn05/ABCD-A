#1
def print_star_pattern():
    a = '★'
    for i in range(3):
        for j in range(4):
            print(a, end=' ')
        print()

def star_pattern_function():
    a = '★'
    for i in range(3):
        for j in range(4):
            print(a, end=' ')
        print()
#2
star_pattern_function()

def print_star_pattern():
    a = '★'
    for i in range(3):
        print((a + ' ') * 4)

def star_pattern_function():
    a = '★'
    for i in range(3):
        print((a + ' ') * 4)

star_pattern_function()

#3
def print_star_pattern():
    # 가로로 별 3개가 연결된 문자열
    horizontal_stars = '★ ★ ★'

    # 세로 반복을 위한 문자열(또는 리스트)
    vertical_repeats = '★ ★ ★ ★' # 이 문자열의 길이가 세로 반복 횟수를 결정합니다.

    # 세로 반복
    for _ in vertical_repeats:
        print(horizontal_stars)

def star_pattern_function():
    # 가로로 별 3개가 연결된 문자열
    horizontal_stars = '★ ★ ★'

    # 세로 반복을 위한 문자열(또는 리스트)
    vertical_repeats = '★ ★ ★ ★' # 이 문자열의 길이가 세로 반복 횟수를 결정합니다.

    # 세로 반복
    for _ in vertical_repeats:
        print(horizontal_stars)

star_pattern_function()
#4
#quiz 4
# 별 하나를 나타내는 문자열
star = '★'

# 가로로 연결된 별을 세로로 4번 반복하여 출력
for _ in range(3):
    print(star * 4)
#5
import math

def calculate_cylinder_volume():
    while True:
        r = input("반지름을 입력하세요 (종료하려면 'q'를 입력하세요): ")
        if r == 'q':
            break
        r = float(r)
        h = float(input("높이를 입력하세요: "))
        volume = math.pi * r ** 2 * h
        print("원기둥의 부피는:", volume)

calculate_cylinder_volume()
#6
import math

def calculate_cylinder_volume():
    r = 5  # 반지름
    h = 10  # 높이
    volume = math.pi * r ** 2 * h
    print("원기둥의 부피는:", volume)

calculate_cylinder_volume()
#7
import datetime

def print_current_datetime():
    x = datetime.datetime.now()
    print(x)

print_current_datetime()
#8
import datetime

def print_current_datetime():
    while True:
        # 현재 시간을 가져옵니다.
        current_time = datetime.datetime.now()

        # 년, 월, 일, 시간, 분, 초를 각각 변수에 저장합니다.
        year = current_time.year
        month = current_time.month
        day = current_time.day
        hour = current_time.hour
        minute = current_time.minute
        second = current_time.second

        # 현재 날짜의 요일을 가져옵니다.
        weekday = current_time.strftime("%A")

        # 시간을 출력합니다.
        print("현재 시간:")
        print(f"년: {year}")
        print(f"월: {month}")
        print(f"일: {day}")
        print(f"시간: {hour}")
        print(f"분: {minute}")
        print(f"초: {second}")
        print(f"요일: {weekday}")

        # 사용자가 프로그램을 종료하고 싶으면 'q'를 입력합니다.
        user_input = input("프로그램을 종료하려면 'q'를 입력하세요: ")
        if user_input.lower() == 'q':
            print("프로그램을 종료합니다.")
            break

print_current_datetime()
#9
def print_taller_than_170(student_heights):
    for height in student_heights:
        # 키가 170보다 작으면 다음 학생의 키를 확인
        if height <= 170:
            continue
        # 키가 170보다 큰 경우에만 출력
        print(f"키가 170보다 큰 학생의 키: {height}")

# 학생들의 키 리스트
student_heights = [140, 192, 201, 176, 163, 154, 161, 186, 193, 188]

# 함수 호출
print_taller_than_170(student_heights)
